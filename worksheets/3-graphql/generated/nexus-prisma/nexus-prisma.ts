/**
 * This file was automatically generated by nexus-prisma@0.3.5
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../../.generated/prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      Products: ProductsObject
      ProductsConnection: ProductsConnectionObject
      PageInfo: PageInfoObject
      ProductsEdge: ProductsEdgeObject
      AggregateProducts: AggregateProductsObject
      Orders: OrdersObject
      Customers: CustomersObject
      OrdersConnection: OrdersConnectionObject
      OrdersEdge: OrdersEdgeObject
      AggregateOrders: AggregateOrdersObject
      Orderlines: OrderlinesObject
      OrderlinesConnection: OrderlinesConnectionObject
      OrderlinesEdge: OrderlinesEdgeObject
      AggregateOrderlines: AggregateOrderlinesObject
      CustomersConnection: CustomersConnectionObject
      CustomersEdge: CustomersEdgeObject
      AggregateCustomers: AggregateCustomersObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      ProductsSubscriptionPayload: ProductsSubscriptionPayloadObject
      ProductsPreviousValues: ProductsPreviousValuesObject
      OrdersSubscriptionPayload: OrdersSubscriptionPayloadObject
      OrdersPreviousValues: OrdersPreviousValuesObject
      OrderlinesSubscriptionPayload: OrderlinesSubscriptionPayloadObject
      OrderlinesPreviousValues: OrderlinesPreviousValuesObject
      CustomersSubscriptionPayload: CustomersSubscriptionPayloadObject
      CustomersPreviousValues: CustomersPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      Products: ProductsFieldDetails
      ProductsConnection: ProductsConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      ProductsEdge: ProductsEdgeFieldDetails
      AggregateProducts: AggregateProductsFieldDetails
      Orders: OrdersFieldDetails
      Customers: CustomersFieldDetails
      OrdersConnection: OrdersConnectionFieldDetails
      OrdersEdge: OrdersEdgeFieldDetails
      AggregateOrders: AggregateOrdersFieldDetails
      Orderlines: OrderlinesFieldDetails
      OrderlinesConnection: OrderlinesConnectionFieldDetails
      OrderlinesEdge: OrderlinesEdgeFieldDetails
      AggregateOrderlines: AggregateOrderlinesFieldDetails
      CustomersConnection: CustomersConnectionFieldDetails
      CustomersEdge: CustomersEdgeFieldDetails
      AggregateCustomers: AggregateCustomersFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      ProductsSubscriptionPayload: ProductsSubscriptionPayloadFieldDetails
      ProductsPreviousValues: ProductsPreviousValuesFieldDetails
      OrdersSubscriptionPayload: OrdersSubscriptionPayloadFieldDetails
      OrdersPreviousValues: OrdersPreviousValuesFieldDetails
      OrderlinesSubscriptionPayload: OrderlinesSubscriptionPayloadFieldDetails
      OrderlinesPreviousValues: OrderlinesPreviousValuesFieldDetails
      CustomersSubscriptionPayload: CustomersSubscriptionPayloadFieldDetails
      CustomersPreviousValues: CustomersPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      ProductsWhereUniqueInput: ProductsWhereUniqueInputInputObject
      ProductsWhereInput: ProductsWhereInputInputObject
      OrdersWhereUniqueInput: OrdersWhereUniqueInputInputObject
      OrdersWhereInput: OrdersWhereInputInputObject
      CustomersWhereInput: CustomersWhereInputInputObject
      OrderlinesWhereUniqueInput: OrderlinesWhereUniqueInputInputObject
      OrderlinesWhereInput: OrderlinesWhereInputInputObject
      CustomersWhereUniqueInput: CustomersWhereUniqueInputInputObject
      ProductsCreateInput: ProductsCreateInputInputObject
      ProductsUpdateInput: ProductsUpdateInputInputObject
      ProductsUpdateManyMutationInput: ProductsUpdateManyMutationInputInputObject
      OrdersCreateInput: OrdersCreateInputInputObject
      CustomersCreateOneInput: CustomersCreateOneInputInputObject
      CustomersCreateInput: CustomersCreateInputInputObject
      OrdersUpdateInput: OrdersUpdateInputInputObject
      CustomersUpdateOneInput: CustomersUpdateOneInputInputObject
      CustomersUpdateDataInput: CustomersUpdateDataInputInputObject
      CustomersUpsertNestedInput: CustomersUpsertNestedInputInputObject
      OrdersUpdateManyMutationInput: OrdersUpdateManyMutationInputInputObject
      OrderlinesCreateInput: OrderlinesCreateInputInputObject
      OrdersCreateOneInput: OrdersCreateOneInputInputObject
      ProductsCreateOneInput: ProductsCreateOneInputInputObject
      OrderlinesUpdateInput: OrderlinesUpdateInputInputObject
      OrdersUpdateOneRequiredInput: OrdersUpdateOneRequiredInputInputObject
      OrdersUpdateDataInput: OrdersUpdateDataInputInputObject
      OrdersUpsertNestedInput: OrdersUpsertNestedInputInputObject
      ProductsUpdateOneRequiredInput: ProductsUpdateOneRequiredInputInputObject
      ProductsUpdateDataInput: ProductsUpdateDataInputInputObject
      ProductsUpsertNestedInput: ProductsUpsertNestedInputInputObject
      OrderlinesUpdateManyMutationInput: OrderlinesUpdateManyMutationInputInputObject
      CustomersUpdateInput: CustomersUpdateInputInputObject
      CustomersUpdateManyMutationInput: CustomersUpdateManyMutationInputInputObject
      ProductsSubscriptionWhereInput: ProductsSubscriptionWhereInputInputObject
      OrdersSubscriptionWhereInput: OrdersSubscriptionWhereInputInputObject
      OrderlinesSubscriptionWhereInput: OrderlinesSubscriptionWhereInputInputObject
      CustomersSubscriptionWhereInput: CustomersSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    ProductsOrderByInput: ProductsOrderByInputValues,
    OrdersOrderByInput: OrdersOrderByInputValues,
    OrderlinesOrderByInput: OrderlinesOrderByInputValues,
    CustomersOrderByInput: CustomersOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'products', args?: QueryProductsArgs[] | false, alias?: string  } 
  | { name: 'productses', args?: QueryProductsesArgs[] | false, alias?: string  } 
  | { name: 'productsesConnection', args?: QueryProductsesConnectionArgs[] | false, alias?: string  } 
  | { name: 'orders', args?: QueryOrdersArgs[] | false, alias?: string  } 
  | { name: 'orderses', args?: QueryOrdersesArgs[] | false, alias?: string  } 
  | { name: 'ordersesConnection', args?: QueryOrdersesConnectionArgs[] | false, alias?: string  } 
  | { name: 'orderlines', args?: QueryOrderlinesArgs[] | false, alias?: string  } 
  | { name: 'orderlineses', args?: QueryOrderlinesesArgs[] | false, alias?: string  } 
  | { name: 'orderlinesesConnection', args?: QueryOrderlinesesConnectionArgs[] | false, alias?: string  } 
  | { name: 'customers', args?: QueryCustomersArgs[] | false, alias?: string  } 
  | { name: 'customerses', args?: QueryCustomersesArgs[] | false, alias?: string  } 
  | { name: 'customersesConnection', args?: QueryCustomersesConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'products'
  | 'productses'
  | 'productsesConnection'
  | 'orders'
  | 'orderses'
  | 'ordersesConnection'
  | 'orderlines'
  | 'orderlineses'
  | 'orderlinesesConnection'
  | 'customers'
  | 'customerses'
  | 'customersesConnection'


type QueryProductsArgs =
  | 'where'
type QueryProductsesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryProductsesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrdersArgs =
  | 'where'
type QueryOrdersesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrdersesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrderlinesArgs =
  | 'where'
type QueryOrderlinesesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrderlinesesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCustomersArgs =
  | 'where'
type QueryCustomersesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCustomersesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  products: {
    type: 'Products'
    args: Record<QueryProductsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ProductsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Products | null> | prisma.Products | null
  }
  productses: {
    type: 'Products'
    args: Record<QueryProductsesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProductsWhereInput | null, orderBy?: prisma.ProductsOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Products[]> | prisma.Products[]
  }
  productsesConnection: {
    type: 'ProductsConnection'
    args: Record<QueryProductsesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ProductsWhereInput | null, orderBy?: prisma.ProductsOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductsConnection> | prisma.ProductsConnection
  }
  orders: {
    type: 'Orders'
    args: Record<QueryOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OrdersWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orders | null> | prisma.Orders | null
  }
  orderses: {
    type: 'Orders'
    args: Record<QueryOrdersesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrdersWhereInput | null, orderBy?: prisma.OrdersOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orders[]> | prisma.Orders[]
  }
  ordersesConnection: {
    type: 'OrdersConnection'
    args: Record<QueryOrdersesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrdersWhereInput | null, orderBy?: prisma.OrdersOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrdersConnection> | prisma.OrdersConnection
  }
  orderlines: {
    type: 'Orderlines'
    args: Record<QueryOrderlinesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OrderlinesWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orderlines | null> | prisma.Orderlines | null
  }
  orderlineses: {
    type: 'Orderlines'
    args: Record<QueryOrderlinesesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderlinesWhereInput | null, orderBy?: prisma.OrderlinesOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orderlines[]> | prisma.Orderlines[]
  }
  orderlinesesConnection: {
    type: 'OrderlinesConnection'
    args: Record<QueryOrderlinesesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderlinesWhereInput | null, orderBy?: prisma.OrderlinesOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderlinesConnection> | prisma.OrderlinesConnection
  }
  customers: {
    type: 'Customers'
    args: Record<QueryCustomersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: CustomersWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customers | null> | prisma.Customers | null
  }
  customerses: {
    type: 'Customers'
    args: Record<QueryCustomersesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CustomersWhereInput | null, orderBy?: prisma.CustomersOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customers[]> | prisma.Customers[]
  }
  customersesConnection: {
    type: 'CustomersConnection'
    args: Record<QueryCustomersesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CustomersWhereInput | null, orderBy?: prisma.CustomersOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CustomersConnection> | prisma.CustomersConnection
  }
}
  

// Types for Products

type ProductsObject =
  | ProductsFields
  | { name: 'prod_id', args?: [] | false, alias?: string  } 
  | { name: 'cat_id', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'actor', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'special', args?: [] | false, alias?: string  } 

type ProductsFields =
  | 'prod_id'
  | 'cat_id'
  | 'title'
  | 'actor'
  | 'price'
  | 'special'



  

export interface ProductsFieldDetails {
  prod_id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  cat_id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  actor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  price: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  special: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for ProductsConnection

type ProductsConnectionObject =
  | ProductsConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ProductsConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ProductsConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ProductsEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ProductsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductsEdge[]> | prisma.ProductsEdge[]
  }
  aggregate: {
    type: 'AggregateProducts'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductsConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateProducts> | prisma.AggregateProducts
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for ProductsEdge

type ProductsEdgeObject =
  | ProductsEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ProductsEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ProductsEdgeFieldDetails {
  node: {
    type: 'Products'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductsEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Products> | prisma.Products
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateProducts

type AggregateProductsObject =
  | AggregateProductsFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateProductsFields =
  | 'count'



  

export interface AggregateProductsFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Orders

type OrdersObject =
  | OrdersFields
  | { name: 'order_id', args?: [] | false, alias?: string  } 
  | { name: 'orderdate', args?: [] | false, alias?: string  } 
  | { name: 'customer_id', args?: [] | false, alias?: string  } 
  | { name: 'netamount', args?: [] | false, alias?: string  } 
  | { name: 'tax', args?: [] | false, alias?: string  } 
  | { name: 'totalAmount', args?: [] | false, alias?: string  } 

type OrdersFields =
  | 'order_id'
  | 'orderdate'
  | 'customer_id'
  | 'netamount'
  | 'tax'
  | 'totalAmount'



  

export interface OrdersFieldDetails {
  order_id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  orderdate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  customer_id: {
    type: 'Customers'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Orders">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customers | null> | prisma.Customers | null
  }
  netamount: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  tax: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  totalAmount: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Customers

type CustomersObject =
  | CustomersFields
  | { name: 'cust_id', args?: [] | false, alias?: string  } 
  | { name: 'firstname', args?: [] | false, alias?: string  } 
  | { name: 'lastname', args?: [] | false, alias?: string  } 
  | { name: 'address1', args?: [] | false, alias?: string  } 
  | { name: 'address2', args?: [] | false, alias?: string  } 
  | { name: 'city', args?: [] | false, alias?: string  } 
  | { name: 'state', args?: [] | false, alias?: string  } 
  | { name: 'zip', args?: [] | false, alias?: string  } 
  | { name: 'country', args?: [] | false, alias?: string  } 
  | { name: 'region', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'creditcardtype', args?: [] | false, alias?: string  } 
  | { name: 'creditcard', args?: [] | false, alias?: string  } 
  | { name: 'creditcardexpiry', args?: [] | false, alias?: string  } 
  | { name: 'username', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'age', args?: [] | false, alias?: string  } 
  | { name: 'income', args?: [] | false, alias?: string  } 
  | { name: 'gender', args?: [] | false, alias?: string  } 

type CustomersFields =
  | 'cust_id'
  | 'firstname'
  | 'lastname'
  | 'address1'
  | 'address2'
  | 'city'
  | 'state'
  | 'zip'
  | 'country'
  | 'region'
  | 'email'
  | 'phone'
  | 'creditcardtype'
  | 'creditcard'
  | 'creditcardexpiry'
  | 'username'
  | 'password'
  | 'age'
  | 'income'
  | 'gender'



  

export interface CustomersFieldDetails {
  cust_id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  firstname: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastname: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  address1: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  address2: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  city: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  state: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  zip: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  country: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  region: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  creditcardtype: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  creditcard: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  creditcardexpiry: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  username: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  age: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  income: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  gender: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for OrdersConnection

type OrdersConnectionObject =
  | OrdersConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OrdersConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OrdersConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrdersConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OrdersEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrdersConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrdersEdge[]> | prisma.OrdersEdge[]
  }
  aggregate: {
    type: 'AggregateOrders'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrdersConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOrders> | prisma.AggregateOrders
  }
}
  

// Types for OrdersEdge

type OrdersEdgeObject =
  | OrdersEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OrdersEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OrdersEdgeFieldDetails {
  node: {
    type: 'Orders'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrdersEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orders> | prisma.Orders
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOrders

type AggregateOrdersObject =
  | AggregateOrdersFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOrdersFields =
  | 'count'



  

export interface AggregateOrdersFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Orderlines

type OrderlinesObject =
  | OrderlinesFields
  | { name: 'orderline_id', args?: [] | false, alias?: string  } 
  | { name: 'order_id', args?: [] | false, alias?: string  } 
  | { name: 'product_id', args?: [] | false, alias?: string  } 
  | { name: 'quantity', args?: [] | false, alias?: string  } 
  | { name: 'orderdate', args?: [] | false, alias?: string  } 

type OrderlinesFields =
  | 'orderline_id'
  | 'order_id'
  | 'product_id'
  | 'quantity'
  | 'orderdate'



  

export interface OrderlinesFieldDetails {
  orderline_id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  order_id: {
    type: 'Orders'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Orderlines">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orders> | prisma.Orders
  }
  product_id: {
    type: 'Products'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Orderlines">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Products> | prisma.Products
  }
  quantity: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  orderdate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderlinesConnection

type OrderlinesConnectionObject =
  | OrderlinesConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OrderlinesConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OrderlinesConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderlinesConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OrderlinesEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrderlinesConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderlinesEdge[]> | prisma.OrderlinesEdge[]
  }
  aggregate: {
    type: 'AggregateOrderlines'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderlinesConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOrderlines> | prisma.AggregateOrderlines
  }
}
  

// Types for OrderlinesEdge

type OrderlinesEdgeObject =
  | OrderlinesEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OrderlinesEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OrderlinesEdgeFieldDetails {
  node: {
    type: 'Orderlines'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderlinesEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orderlines> | prisma.Orderlines
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOrderlines

type AggregateOrderlinesObject =
  | AggregateOrderlinesFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOrderlinesFields =
  | 'count'



  

export interface AggregateOrderlinesFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CustomersConnection

type CustomersConnectionObject =
  | CustomersConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type CustomersConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface CustomersConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CustomersConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'CustomersEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"CustomersConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CustomersEdge[]> | prisma.CustomersEdge[]
  }
  aggregate: {
    type: 'AggregateCustomers'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CustomersConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateCustomers> | prisma.AggregateCustomers
  }
}
  

// Types for CustomersEdge

type CustomersEdgeObject =
  | CustomersEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type CustomersEdgeFields =
  | 'node'
  | 'cursor'



  

export interface CustomersEdgeFieldDetails {
  node: {
    type: 'Customers'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CustomersEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customers> | prisma.Customers
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateCustomers

type AggregateCustomersObject =
  | AggregateCustomersFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateCustomersFields =
  | 'count'



  

export interface AggregateCustomersFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createProducts', args?: MutationCreateProductsArgs[] | false, alias?: string  } 
  | { name: 'updateProducts', args?: MutationUpdateProductsArgs[] | false, alias?: string  } 
  | { name: 'updateManyProductses', args?: MutationUpdateManyProductsesArgs[] | false, alias?: string  } 
  | { name: 'upsertProducts', args?: MutationUpsertProductsArgs[] | false, alias?: string  } 
  | { name: 'deleteProducts', args?: MutationDeleteProductsArgs[] | false, alias?: string  } 
  | { name: 'deleteManyProductses', args?: MutationDeleteManyProductsesArgs[] | false, alias?: string  } 
  | { name: 'createOrders', args?: MutationCreateOrdersArgs[] | false, alias?: string  } 
  | { name: 'updateOrders', args?: MutationUpdateOrdersArgs[] | false, alias?: string  } 
  | { name: 'updateManyOrderses', args?: MutationUpdateManyOrdersesArgs[] | false, alias?: string  } 
  | { name: 'upsertOrders', args?: MutationUpsertOrdersArgs[] | false, alias?: string  } 
  | { name: 'deleteOrders', args?: MutationDeleteOrdersArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOrderses', args?: MutationDeleteManyOrdersesArgs[] | false, alias?: string  } 
  | { name: 'createOrderlines', args?: MutationCreateOrderlinesArgs[] | false, alias?: string  } 
  | { name: 'updateOrderlines', args?: MutationUpdateOrderlinesArgs[] | false, alias?: string  } 
  | { name: 'updateManyOrderlineses', args?: MutationUpdateManyOrderlinesesArgs[] | false, alias?: string  } 
  | { name: 'upsertOrderlines', args?: MutationUpsertOrderlinesArgs[] | false, alias?: string  } 
  | { name: 'deleteOrderlines', args?: MutationDeleteOrderlinesArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOrderlineses', args?: MutationDeleteManyOrderlinesesArgs[] | false, alias?: string  } 
  | { name: 'createCustomers', args?: MutationCreateCustomersArgs[] | false, alias?: string  } 
  | { name: 'updateCustomers', args?: MutationUpdateCustomersArgs[] | false, alias?: string  } 
  | { name: 'updateManyCustomerses', args?: MutationUpdateManyCustomersesArgs[] | false, alias?: string  } 
  | { name: 'upsertCustomers', args?: MutationUpsertCustomersArgs[] | false, alias?: string  } 
  | { name: 'deleteCustomers', args?: MutationDeleteCustomersArgs[] | false, alias?: string  } 
  | { name: 'deleteManyCustomerses', args?: MutationDeleteManyCustomersesArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createProducts'
  | 'updateProducts'
  | 'updateManyProductses'
  | 'upsertProducts'
  | 'deleteProducts'
  | 'deleteManyProductses'
  | 'createOrders'
  | 'updateOrders'
  | 'updateManyOrderses'
  | 'upsertOrders'
  | 'deleteOrders'
  | 'deleteManyOrderses'
  | 'createOrderlines'
  | 'updateOrderlines'
  | 'updateManyOrderlineses'
  | 'upsertOrderlines'
  | 'deleteOrderlines'
  | 'deleteManyOrderlineses'
  | 'createCustomers'
  | 'updateCustomers'
  | 'updateManyCustomerses'
  | 'upsertCustomers'
  | 'deleteCustomers'
  | 'deleteManyCustomerses'


type MutationCreateProductsArgs =
  | 'data'
type MutationUpdateProductsArgs =
  | 'data'
  | 'where'
type MutationUpdateManyProductsesArgs =
  | 'data'
  | 'where'
type MutationUpsertProductsArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteProductsArgs =
  | 'where'
type MutationDeleteManyProductsesArgs =
  | 'where'
type MutationCreateOrdersArgs =
  | 'data'
type MutationUpdateOrdersArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOrdersesArgs =
  | 'data'
  | 'where'
type MutationUpsertOrdersArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOrdersArgs =
  | 'where'
type MutationDeleteManyOrdersesArgs =
  | 'where'
type MutationCreateOrderlinesArgs =
  | 'data'
type MutationUpdateOrderlinesArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOrderlinesesArgs =
  | 'data'
  | 'where'
type MutationUpsertOrderlinesArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOrderlinesArgs =
  | 'where'
type MutationDeleteManyOrderlinesesArgs =
  | 'where'
type MutationCreateCustomersArgs =
  | 'data'
type MutationUpdateCustomersArgs =
  | 'data'
  | 'where'
type MutationUpdateManyCustomersesArgs =
  | 'data'
  | 'where'
type MutationUpsertCustomersArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteCustomersArgs =
  | 'where'
type MutationDeleteManyCustomersesArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createProducts: {
    type: 'Products'
    args: Record<MutationCreateProductsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProductsCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Products> | prisma.Products
  }
  updateProducts: {
    type: 'Products'
    args: Record<MutationUpdateProductsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProductsUpdateInput, where: ProductsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Products | null> | prisma.Products | null
  }
  updateManyProductses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyProductsesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ProductsUpdateManyMutationInput, where?: ProductsWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertProducts: {
    type: 'Products'
    args: Record<MutationUpsertProductsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProductsWhereUniqueInput, create: ProductsCreateInput, update: ProductsUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Products> | prisma.Products
  }
  deleteProducts: {
    type: 'Products'
    args: Record<MutationDeleteProductsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ProductsWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Products | null> | prisma.Products | null
  }
  deleteManyProductses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyProductsesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ProductsWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOrders: {
    type: 'Orders'
    args: Record<MutationCreateOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrdersCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orders> | prisma.Orders
  }
  updateOrders: {
    type: 'Orders'
    args: Record<MutationUpdateOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrdersUpdateInput, where: OrdersWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orders | null> | prisma.Orders | null
  }
  updateManyOrderses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOrdersesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrdersUpdateManyMutationInput, where?: OrdersWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOrders: {
    type: 'Orders'
    args: Record<MutationUpsertOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrdersWhereUniqueInput, create: OrdersCreateInput, update: OrdersUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orders> | prisma.Orders
  }
  deleteOrders: {
    type: 'Orders'
    args: Record<MutationDeleteOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrdersWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orders | null> | prisma.Orders | null
  }
  deleteManyOrderses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOrdersesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OrdersWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOrderlines: {
    type: 'Orderlines'
    args: Record<MutationCreateOrderlinesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderlinesCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orderlines> | prisma.Orderlines
  }
  updateOrderlines: {
    type: 'Orderlines'
    args: Record<MutationUpdateOrderlinesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderlinesUpdateInput, where: OrderlinesWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orderlines | null> | prisma.Orderlines | null
  }
  updateManyOrderlineses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOrderlinesesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderlinesUpdateManyMutationInput, where?: OrderlinesWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOrderlines: {
    type: 'Orderlines'
    args: Record<MutationUpsertOrderlinesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderlinesWhereUniqueInput, create: OrderlinesCreateInput, update: OrderlinesUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orderlines> | prisma.Orderlines
  }
  deleteOrderlines: {
    type: 'Orderlines'
    args: Record<MutationDeleteOrderlinesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderlinesWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orderlines | null> | prisma.Orderlines | null
  }
  deleteManyOrderlineses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOrderlinesesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OrderlinesWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createCustomers: {
    type: 'Customers'
    args: Record<MutationCreateCustomersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CustomersCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customers> | prisma.Customers
  }
  updateCustomers: {
    type: 'Customers'
    args: Record<MutationUpdateCustomersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CustomersUpdateInput, where: CustomersWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customers | null> | prisma.Customers | null
  }
  updateManyCustomerses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyCustomersesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CustomersUpdateManyMutationInput, where?: CustomersWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertCustomers: {
    type: 'Customers'
    args: Record<MutationUpsertCustomersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CustomersWhereUniqueInput, create: CustomersCreateInput, update: CustomersUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customers> | prisma.Customers
  }
  deleteCustomers: {
    type: 'Customers'
    args: Record<MutationDeleteCustomersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CustomersWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customers | null> | prisma.Customers | null
  }
  deleteManyCustomerses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyCustomersesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: CustomersWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'products', args?: SubscriptionProductsArgs[] | false, alias?: string  } 
  | { name: 'orders', args?: SubscriptionOrdersArgs[] | false, alias?: string  } 
  | { name: 'orderlines', args?: SubscriptionOrderlinesArgs[] | false, alias?: string  } 
  | { name: 'customers', args?: SubscriptionCustomersArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'products'
  | 'orders'
  | 'orderlines'
  | 'customers'


type SubscriptionProductsArgs =
  | 'where'
type SubscriptionOrdersArgs =
  | 'where'
type SubscriptionOrderlinesArgs =
  | 'where'
type SubscriptionCustomersArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  products: {
    type: 'ProductsSubscriptionPayload'
    args: Record<SubscriptionProductsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ProductsSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductsSubscriptionPayload | null> | prisma.ProductsSubscriptionPayload | null
  }
  orders: {
    type: 'OrdersSubscriptionPayload'
    args: Record<SubscriptionOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OrdersSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrdersSubscriptionPayload | null> | prisma.OrdersSubscriptionPayload | null
  }
  orderlines: {
    type: 'OrderlinesSubscriptionPayload'
    args: Record<SubscriptionOrderlinesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OrderlinesSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderlinesSubscriptionPayload | null> | prisma.OrderlinesSubscriptionPayload | null
  }
  customers: {
    type: 'CustomersSubscriptionPayload'
    args: Record<SubscriptionCustomersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: CustomersSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CustomersSubscriptionPayload | null> | prisma.CustomersSubscriptionPayload | null
  }
}
  

// Types for ProductsSubscriptionPayload

type ProductsSubscriptionPayloadObject =
  | ProductsSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ProductsSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ProductsSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ProductsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Products'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProductsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Products | null> | prisma.Products | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ProductsPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ProductsSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ProductsPreviousValues | null> | prisma.ProductsPreviousValues | null
  }
}
  

// Types for ProductsPreviousValues

type ProductsPreviousValuesObject =
  | ProductsPreviousValuesFields
  | { name: 'prod_id', args?: [] | false, alias?: string  } 
  | { name: 'cat_id', args?: [] | false, alias?: string  } 
  | { name: 'title', args?: [] | false, alias?: string  } 
  | { name: 'actor', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'special', args?: [] | false, alias?: string  } 

type ProductsPreviousValuesFields =
  | 'prod_id'
  | 'cat_id'
  | 'title'
  | 'actor'
  | 'price'
  | 'special'



  

export interface ProductsPreviousValuesFieldDetails {
  prod_id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  cat_id: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  title: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  actor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  price: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  special: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for OrdersSubscriptionPayload

type OrdersSubscriptionPayloadObject =
  | OrdersSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OrdersSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OrdersSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrdersSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Orders'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrdersSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orders | null> | prisma.Orders | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OrdersPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrdersSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrdersPreviousValues | null> | prisma.OrdersPreviousValues | null
  }
}
  

// Types for OrdersPreviousValues

type OrdersPreviousValuesObject =
  | OrdersPreviousValuesFields
  | { name: 'order_id', args?: [] | false, alias?: string  } 
  | { name: 'orderdate', args?: [] | false, alias?: string  } 
  | { name: 'netamount', args?: [] | false, alias?: string  } 
  | { name: 'tax', args?: [] | false, alias?: string  } 
  | { name: 'totalAmount', args?: [] | false, alias?: string  } 

type OrdersPreviousValuesFields =
  | 'order_id'
  | 'orderdate'
  | 'netamount'
  | 'tax'
  | 'totalAmount'



  

export interface OrdersPreviousValuesFieldDetails {
  order_id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  orderdate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  netamount: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  tax: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  totalAmount: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderlinesSubscriptionPayload

type OrderlinesSubscriptionPayloadObject =
  | OrderlinesSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OrderlinesSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OrderlinesSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderlinesSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Orderlines'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderlinesSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Orderlines | null> | prisma.Orderlines | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OrderlinesPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderlinesSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderlinesPreviousValues | null> | prisma.OrderlinesPreviousValues | null
  }
}
  

// Types for OrderlinesPreviousValues

type OrderlinesPreviousValuesObject =
  | OrderlinesPreviousValuesFields
  | { name: 'orderline_id', args?: [] | false, alias?: string  } 
  | { name: 'quantity', args?: [] | false, alias?: string  } 
  | { name: 'orderdate', args?: [] | false, alias?: string  } 

type OrderlinesPreviousValuesFields =
  | 'orderline_id'
  | 'quantity'
  | 'orderdate'



  

export interface OrderlinesPreviousValuesFieldDetails {
  orderline_id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  quantity: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  orderdate: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for CustomersSubscriptionPayload

type CustomersSubscriptionPayloadObject =
  | CustomersSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type CustomersSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface CustomersSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CustomersSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Customers'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CustomersSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customers | null> | prisma.Customers | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'CustomersPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CustomersSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CustomersPreviousValues | null> | prisma.CustomersPreviousValues | null
  }
}
  

// Types for CustomersPreviousValues

type CustomersPreviousValuesObject =
  | CustomersPreviousValuesFields
  | { name: 'cust_id', args?: [] | false, alias?: string  } 
  | { name: 'firstname', args?: [] | false, alias?: string  } 
  | { name: 'lastname', args?: [] | false, alias?: string  } 
  | { name: 'address1', args?: [] | false, alias?: string  } 
  | { name: 'address2', args?: [] | false, alias?: string  } 
  | { name: 'city', args?: [] | false, alias?: string  } 
  | { name: 'state', args?: [] | false, alias?: string  } 
  | { name: 'zip', args?: [] | false, alias?: string  } 
  | { name: 'country', args?: [] | false, alias?: string  } 
  | { name: 'region', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'phone', args?: [] | false, alias?: string  } 
  | { name: 'creditcardtype', args?: [] | false, alias?: string  } 
  | { name: 'creditcard', args?: [] | false, alias?: string  } 
  | { name: 'creditcardexpiry', args?: [] | false, alias?: string  } 
  | { name: 'username', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'age', args?: [] | false, alias?: string  } 
  | { name: 'income', args?: [] | false, alias?: string  } 
  | { name: 'gender', args?: [] | false, alias?: string  } 

type CustomersPreviousValuesFields =
  | 'cust_id'
  | 'firstname'
  | 'lastname'
  | 'address1'
  | 'address2'
  | 'city'
  | 'state'
  | 'zip'
  | 'country'
  | 'region'
  | 'email'
  | 'phone'
  | 'creditcardtype'
  | 'creditcard'
  | 'creditcardexpiry'
  | 'username'
  | 'password'
  | 'age'
  | 'income'
  | 'gender'



  

export interface CustomersPreviousValuesFieldDetails {
  cust_id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  firstname: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  lastname: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  address1: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  address2: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  city: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  state: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  zip: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  country: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  region: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  phone: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  creditcardtype: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  creditcard: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  creditcardexpiry: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  username: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  age: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  income: {
    type: 'Float'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  gender: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  


export interface ProductsWhereUniqueInput {
  prod_id?: string | null
}
export type ProductsWhereUniqueInputInputObject =
  | Extract<keyof ProductsWhereUniqueInput, string>
  | { name: 'prod_id', alias?: string  } 
  
export interface ProductsWhereInput {
  prod_id?: string | null
  prod_id_not?: string | null
  prod_id_in?: string[]
  prod_id_not_in?: string[]
  prod_id_lt?: string | null
  prod_id_lte?: string | null
  prod_id_gt?: string | null
  prod_id_gte?: string | null
  prod_id_contains?: string | null
  prod_id_not_contains?: string | null
  prod_id_starts_with?: string | null
  prod_id_not_starts_with?: string | null
  prod_id_ends_with?: string | null
  prod_id_not_ends_with?: string | null
  cat_id?: number | null
  cat_id_not?: number | null
  cat_id_in?: number[]
  cat_id_not_in?: number[]
  cat_id_lt?: number | null
  cat_id_lte?: number | null
  cat_id_gt?: number | null
  cat_id_gte?: number | null
  title?: string | null
  title_not?: string | null
  title_in?: string[]
  title_not_in?: string[]
  title_lt?: string | null
  title_lte?: string | null
  title_gt?: string | null
  title_gte?: string | null
  title_contains?: string | null
  title_not_contains?: string | null
  title_starts_with?: string | null
  title_not_starts_with?: string | null
  title_ends_with?: string | null
  title_not_ends_with?: string | null
  actor?: string | null
  actor_not?: string | null
  actor_in?: string[]
  actor_not_in?: string[]
  actor_lt?: string | null
  actor_lte?: string | null
  actor_gt?: string | null
  actor_gte?: string | null
  actor_contains?: string | null
  actor_not_contains?: string | null
  actor_starts_with?: string | null
  actor_not_starts_with?: string | null
  actor_ends_with?: string | null
  actor_not_ends_with?: string | null
  price?: number | null
  price_not?: number | null
  price_in?: number[]
  price_not_in?: number[]
  price_lt?: number | null
  price_lte?: number | null
  price_gt?: number | null
  price_gte?: number | null
  special?: number | null
  special_not?: number | null
  special_in?: number[]
  special_not_in?: number[]
  special_lt?: number | null
  special_lte?: number | null
  special_gt?: number | null
  special_gte?: number | null
  AND?: ProductsWhereInput[]
  OR?: ProductsWhereInput[]
  NOT?: ProductsWhereInput[]
}
export type ProductsWhereInputInputObject =
  | Extract<keyof ProductsWhereInput, string>
  | { name: 'prod_id', alias?: string  } 
  | { name: 'prod_id_not', alias?: string  } 
  | { name: 'prod_id_in', alias?: string  } 
  | { name: 'prod_id_not_in', alias?: string  } 
  | { name: 'prod_id_lt', alias?: string  } 
  | { name: 'prod_id_lte', alias?: string  } 
  | { name: 'prod_id_gt', alias?: string  } 
  | { name: 'prod_id_gte', alias?: string  } 
  | { name: 'prod_id_contains', alias?: string  } 
  | { name: 'prod_id_not_contains', alias?: string  } 
  | { name: 'prod_id_starts_with', alias?: string  } 
  | { name: 'prod_id_not_starts_with', alias?: string  } 
  | { name: 'prod_id_ends_with', alias?: string  } 
  | { name: 'prod_id_not_ends_with', alias?: string  } 
  | { name: 'cat_id', alias?: string  } 
  | { name: 'cat_id_not', alias?: string  } 
  | { name: 'cat_id_in', alias?: string  } 
  | { name: 'cat_id_not_in', alias?: string  } 
  | { name: 'cat_id_lt', alias?: string  } 
  | { name: 'cat_id_lte', alias?: string  } 
  | { name: 'cat_id_gt', alias?: string  } 
  | { name: 'cat_id_gte', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'title_not', alias?: string  } 
  | { name: 'title_in', alias?: string  } 
  | { name: 'title_not_in', alias?: string  } 
  | { name: 'title_lt', alias?: string  } 
  | { name: 'title_lte', alias?: string  } 
  | { name: 'title_gt', alias?: string  } 
  | { name: 'title_gte', alias?: string  } 
  | { name: 'title_contains', alias?: string  } 
  | { name: 'title_not_contains', alias?: string  } 
  | { name: 'title_starts_with', alias?: string  } 
  | { name: 'title_not_starts_with', alias?: string  } 
  | { name: 'title_ends_with', alias?: string  } 
  | { name: 'title_not_ends_with', alias?: string  } 
  | { name: 'actor', alias?: string  } 
  | { name: 'actor_not', alias?: string  } 
  | { name: 'actor_in', alias?: string  } 
  | { name: 'actor_not_in', alias?: string  } 
  | { name: 'actor_lt', alias?: string  } 
  | { name: 'actor_lte', alias?: string  } 
  | { name: 'actor_gt', alias?: string  } 
  | { name: 'actor_gte', alias?: string  } 
  | { name: 'actor_contains', alias?: string  } 
  | { name: 'actor_not_contains', alias?: string  } 
  | { name: 'actor_starts_with', alias?: string  } 
  | { name: 'actor_not_starts_with', alias?: string  } 
  | { name: 'actor_ends_with', alias?: string  } 
  | { name: 'actor_not_ends_with', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'special', alias?: string  } 
  | { name: 'special_not', alias?: string  } 
  | { name: 'special_in', alias?: string  } 
  | { name: 'special_not_in', alias?: string  } 
  | { name: 'special_lt', alias?: string  } 
  | { name: 'special_lte', alias?: string  } 
  | { name: 'special_gt', alias?: string  } 
  | { name: 'special_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrdersWhereUniqueInput {
  order_id?: string | null
}
export type OrdersWhereUniqueInputInputObject =
  | Extract<keyof OrdersWhereUniqueInput, string>
  | { name: 'order_id', alias?: string  } 
  
export interface OrdersWhereInput {
  order_id?: string | null
  order_id_not?: string | null
  order_id_in?: string[]
  order_id_not_in?: string[]
  order_id_lt?: string | null
  order_id_lte?: string | null
  order_id_gt?: string | null
  order_id_gte?: string | null
  order_id_contains?: string | null
  order_id_not_contains?: string | null
  order_id_starts_with?: string | null
  order_id_not_starts_with?: string | null
  order_id_ends_with?: string | null
  order_id_not_ends_with?: string | null
  orderdate?: string | null
  orderdate_not?: string | null
  orderdate_in?: string[]
  orderdate_not_in?: string[]
  orderdate_lt?: string | null
  orderdate_lte?: string | null
  orderdate_gt?: string | null
  orderdate_gte?: string | null
  customer_id?: CustomersWhereInput | null
  netamount?: number | null
  netamount_not?: number | null
  netamount_in?: number[]
  netamount_not_in?: number[]
  netamount_lt?: number | null
  netamount_lte?: number | null
  netamount_gt?: number | null
  netamount_gte?: number | null
  tax?: number | null
  tax_not?: number | null
  tax_in?: number[]
  tax_not_in?: number[]
  tax_lt?: number | null
  tax_lte?: number | null
  tax_gt?: number | null
  tax_gte?: number | null
  totalAmount?: number | null
  totalAmount_not?: number | null
  totalAmount_in?: number[]
  totalAmount_not_in?: number[]
  totalAmount_lt?: number | null
  totalAmount_lte?: number | null
  totalAmount_gt?: number | null
  totalAmount_gte?: number | null
  AND?: OrdersWhereInput[]
  OR?: OrdersWhereInput[]
  NOT?: OrdersWhereInput[]
}
export type OrdersWhereInputInputObject =
  | Extract<keyof OrdersWhereInput, string>
  | { name: 'order_id', alias?: string  } 
  | { name: 'order_id_not', alias?: string  } 
  | { name: 'order_id_in', alias?: string  } 
  | { name: 'order_id_not_in', alias?: string  } 
  | { name: 'order_id_lt', alias?: string  } 
  | { name: 'order_id_lte', alias?: string  } 
  | { name: 'order_id_gt', alias?: string  } 
  | { name: 'order_id_gte', alias?: string  } 
  | { name: 'order_id_contains', alias?: string  } 
  | { name: 'order_id_not_contains', alias?: string  } 
  | { name: 'order_id_starts_with', alias?: string  } 
  | { name: 'order_id_not_starts_with', alias?: string  } 
  | { name: 'order_id_ends_with', alias?: string  } 
  | { name: 'order_id_not_ends_with', alias?: string  } 
  | { name: 'orderdate', alias?: string  } 
  | { name: 'orderdate_not', alias?: string  } 
  | { name: 'orderdate_in', alias?: string  } 
  | { name: 'orderdate_not_in', alias?: string  } 
  | { name: 'orderdate_lt', alias?: string  } 
  | { name: 'orderdate_lte', alias?: string  } 
  | { name: 'orderdate_gt', alias?: string  } 
  | { name: 'orderdate_gte', alias?: string  } 
  | { name: 'customer_id', alias?: string  } 
  | { name: 'netamount', alias?: string  } 
  | { name: 'netamount_not', alias?: string  } 
  | { name: 'netamount_in', alias?: string  } 
  | { name: 'netamount_not_in', alias?: string  } 
  | { name: 'netamount_lt', alias?: string  } 
  | { name: 'netamount_lte', alias?: string  } 
  | { name: 'netamount_gt', alias?: string  } 
  | { name: 'netamount_gte', alias?: string  } 
  | { name: 'tax', alias?: string  } 
  | { name: 'tax_not', alias?: string  } 
  | { name: 'tax_in', alias?: string  } 
  | { name: 'tax_not_in', alias?: string  } 
  | { name: 'tax_lt', alias?: string  } 
  | { name: 'tax_lte', alias?: string  } 
  | { name: 'tax_gt', alias?: string  } 
  | { name: 'tax_gte', alias?: string  } 
  | { name: 'totalAmount', alias?: string  } 
  | { name: 'totalAmount_not', alias?: string  } 
  | { name: 'totalAmount_in', alias?: string  } 
  | { name: 'totalAmount_not_in', alias?: string  } 
  | { name: 'totalAmount_lt', alias?: string  } 
  | { name: 'totalAmount_lte', alias?: string  } 
  | { name: 'totalAmount_gt', alias?: string  } 
  | { name: 'totalAmount_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CustomersWhereInput {
  cust_id?: string | null
  cust_id_not?: string | null
  cust_id_in?: string[]
  cust_id_not_in?: string[]
  cust_id_lt?: string | null
  cust_id_lte?: string | null
  cust_id_gt?: string | null
  cust_id_gte?: string | null
  cust_id_contains?: string | null
  cust_id_not_contains?: string | null
  cust_id_starts_with?: string | null
  cust_id_not_starts_with?: string | null
  cust_id_ends_with?: string | null
  cust_id_not_ends_with?: string | null
  firstname?: string | null
  firstname_not?: string | null
  firstname_in?: string[]
  firstname_not_in?: string[]
  firstname_lt?: string | null
  firstname_lte?: string | null
  firstname_gt?: string | null
  firstname_gte?: string | null
  firstname_contains?: string | null
  firstname_not_contains?: string | null
  firstname_starts_with?: string | null
  firstname_not_starts_with?: string | null
  firstname_ends_with?: string | null
  firstname_not_ends_with?: string | null
  lastname?: string | null
  lastname_not?: string | null
  lastname_in?: string[]
  lastname_not_in?: string[]
  lastname_lt?: string | null
  lastname_lte?: string | null
  lastname_gt?: string | null
  lastname_gte?: string | null
  lastname_contains?: string | null
  lastname_not_contains?: string | null
  lastname_starts_with?: string | null
  lastname_not_starts_with?: string | null
  lastname_ends_with?: string | null
  lastname_not_ends_with?: string | null
  address1?: string | null
  address1_not?: string | null
  address1_in?: string[]
  address1_not_in?: string[]
  address1_lt?: string | null
  address1_lte?: string | null
  address1_gt?: string | null
  address1_gte?: string | null
  address1_contains?: string | null
  address1_not_contains?: string | null
  address1_starts_with?: string | null
  address1_not_starts_with?: string | null
  address1_ends_with?: string | null
  address1_not_ends_with?: string | null
  address2?: string | null
  address2_not?: string | null
  address2_in?: string[]
  address2_not_in?: string[]
  address2_lt?: string | null
  address2_lte?: string | null
  address2_gt?: string | null
  address2_gte?: string | null
  address2_contains?: string | null
  address2_not_contains?: string | null
  address2_starts_with?: string | null
  address2_not_starts_with?: string | null
  address2_ends_with?: string | null
  address2_not_ends_with?: string | null
  city?: string | null
  city_not?: string | null
  city_in?: string[]
  city_not_in?: string[]
  city_lt?: string | null
  city_lte?: string | null
  city_gt?: string | null
  city_gte?: string | null
  city_contains?: string | null
  city_not_contains?: string | null
  city_starts_with?: string | null
  city_not_starts_with?: string | null
  city_ends_with?: string | null
  city_not_ends_with?: string | null
  state?: string | null
  state_not?: string | null
  state_in?: string[]
  state_not_in?: string[]
  state_lt?: string | null
  state_lte?: string | null
  state_gt?: string | null
  state_gte?: string | null
  state_contains?: string | null
  state_not_contains?: string | null
  state_starts_with?: string | null
  state_not_starts_with?: string | null
  state_ends_with?: string | null
  state_not_ends_with?: string | null
  zip?: string | null
  zip_not?: string | null
  zip_in?: string[]
  zip_not_in?: string[]
  zip_lt?: string | null
  zip_lte?: string | null
  zip_gt?: string | null
  zip_gte?: string | null
  zip_contains?: string | null
  zip_not_contains?: string | null
  zip_starts_with?: string | null
  zip_not_starts_with?: string | null
  zip_ends_with?: string | null
  zip_not_ends_with?: string | null
  country?: string | null
  country_not?: string | null
  country_in?: string[]
  country_not_in?: string[]
  country_lt?: string | null
  country_lte?: string | null
  country_gt?: string | null
  country_gte?: string | null
  country_contains?: string | null
  country_not_contains?: string | null
  country_starts_with?: string | null
  country_not_starts_with?: string | null
  country_ends_with?: string | null
  country_not_ends_with?: string | null
  region?: string | null
  region_not?: string | null
  region_in?: string[]
  region_not_in?: string[]
  region_lt?: string | null
  region_lte?: string | null
  region_gt?: string | null
  region_gte?: string | null
  region_contains?: string | null
  region_not_contains?: string | null
  region_starts_with?: string | null
  region_not_starts_with?: string | null
  region_ends_with?: string | null
  region_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  phone?: string | null
  phone_not?: string | null
  phone_in?: string[]
  phone_not_in?: string[]
  phone_lt?: string | null
  phone_lte?: string | null
  phone_gt?: string | null
  phone_gte?: string | null
  phone_contains?: string | null
  phone_not_contains?: string | null
  phone_starts_with?: string | null
  phone_not_starts_with?: string | null
  phone_ends_with?: string | null
  phone_not_ends_with?: string | null
  creditcardtype?: string | null
  creditcardtype_not?: string | null
  creditcardtype_in?: string[]
  creditcardtype_not_in?: string[]
  creditcardtype_lt?: string | null
  creditcardtype_lte?: string | null
  creditcardtype_gt?: string | null
  creditcardtype_gte?: string | null
  creditcardtype_contains?: string | null
  creditcardtype_not_contains?: string | null
  creditcardtype_starts_with?: string | null
  creditcardtype_not_starts_with?: string | null
  creditcardtype_ends_with?: string | null
  creditcardtype_not_ends_with?: string | null
  creditcard?: string | null
  creditcard_not?: string | null
  creditcard_in?: string[]
  creditcard_not_in?: string[]
  creditcard_lt?: string | null
  creditcard_lte?: string | null
  creditcard_gt?: string | null
  creditcard_gte?: string | null
  creditcard_contains?: string | null
  creditcard_not_contains?: string | null
  creditcard_starts_with?: string | null
  creditcard_not_starts_with?: string | null
  creditcard_ends_with?: string | null
  creditcard_not_ends_with?: string | null
  creditcardexpiry?: string | null
  creditcardexpiry_not?: string | null
  creditcardexpiry_in?: string[]
  creditcardexpiry_not_in?: string[]
  creditcardexpiry_lt?: string | null
  creditcardexpiry_lte?: string | null
  creditcardexpiry_gt?: string | null
  creditcardexpiry_gte?: string | null
  creditcardexpiry_contains?: string | null
  creditcardexpiry_not_contains?: string | null
  creditcardexpiry_starts_with?: string | null
  creditcardexpiry_not_starts_with?: string | null
  creditcardexpiry_ends_with?: string | null
  creditcardexpiry_not_ends_with?: string | null
  username?: string | null
  username_not?: string | null
  username_in?: string[]
  username_not_in?: string[]
  username_lt?: string | null
  username_lte?: string | null
  username_gt?: string | null
  username_gte?: string | null
  username_contains?: string | null
  username_not_contains?: string | null
  username_starts_with?: string | null
  username_not_starts_with?: string | null
  username_ends_with?: string | null
  username_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  age?: number | null
  age_not?: number | null
  age_in?: number[]
  age_not_in?: number[]
  age_lt?: number | null
  age_lte?: number | null
  age_gt?: number | null
  age_gte?: number | null
  income?: number | null
  income_not?: number | null
  income_in?: number[]
  income_not_in?: number[]
  income_lt?: number | null
  income_lte?: number | null
  income_gt?: number | null
  income_gte?: number | null
  gender?: string | null
  gender_not?: string | null
  gender_in?: string[]
  gender_not_in?: string[]
  gender_lt?: string | null
  gender_lte?: string | null
  gender_gt?: string | null
  gender_gte?: string | null
  gender_contains?: string | null
  gender_not_contains?: string | null
  gender_starts_with?: string | null
  gender_not_starts_with?: string | null
  gender_ends_with?: string | null
  gender_not_ends_with?: string | null
  AND?: CustomersWhereInput[]
  OR?: CustomersWhereInput[]
  NOT?: CustomersWhereInput[]
}
export type CustomersWhereInputInputObject =
  | Extract<keyof CustomersWhereInput, string>
  | { name: 'cust_id', alias?: string  } 
  | { name: 'cust_id_not', alias?: string  } 
  | { name: 'cust_id_in', alias?: string  } 
  | { name: 'cust_id_not_in', alias?: string  } 
  | { name: 'cust_id_lt', alias?: string  } 
  | { name: 'cust_id_lte', alias?: string  } 
  | { name: 'cust_id_gt', alias?: string  } 
  | { name: 'cust_id_gte', alias?: string  } 
  | { name: 'cust_id_contains', alias?: string  } 
  | { name: 'cust_id_not_contains', alias?: string  } 
  | { name: 'cust_id_starts_with', alias?: string  } 
  | { name: 'cust_id_not_starts_with', alias?: string  } 
  | { name: 'cust_id_ends_with', alias?: string  } 
  | { name: 'cust_id_not_ends_with', alias?: string  } 
  | { name: 'firstname', alias?: string  } 
  | { name: 'firstname_not', alias?: string  } 
  | { name: 'firstname_in', alias?: string  } 
  | { name: 'firstname_not_in', alias?: string  } 
  | { name: 'firstname_lt', alias?: string  } 
  | { name: 'firstname_lte', alias?: string  } 
  | { name: 'firstname_gt', alias?: string  } 
  | { name: 'firstname_gte', alias?: string  } 
  | { name: 'firstname_contains', alias?: string  } 
  | { name: 'firstname_not_contains', alias?: string  } 
  | { name: 'firstname_starts_with', alias?: string  } 
  | { name: 'firstname_not_starts_with', alias?: string  } 
  | { name: 'firstname_ends_with', alias?: string  } 
  | { name: 'firstname_not_ends_with', alias?: string  } 
  | { name: 'lastname', alias?: string  } 
  | { name: 'lastname_not', alias?: string  } 
  | { name: 'lastname_in', alias?: string  } 
  | { name: 'lastname_not_in', alias?: string  } 
  | { name: 'lastname_lt', alias?: string  } 
  | { name: 'lastname_lte', alias?: string  } 
  | { name: 'lastname_gt', alias?: string  } 
  | { name: 'lastname_gte', alias?: string  } 
  | { name: 'lastname_contains', alias?: string  } 
  | { name: 'lastname_not_contains', alias?: string  } 
  | { name: 'lastname_starts_with', alias?: string  } 
  | { name: 'lastname_not_starts_with', alias?: string  } 
  | { name: 'lastname_ends_with', alias?: string  } 
  | { name: 'lastname_not_ends_with', alias?: string  } 
  | { name: 'address1', alias?: string  } 
  | { name: 'address1_not', alias?: string  } 
  | { name: 'address1_in', alias?: string  } 
  | { name: 'address1_not_in', alias?: string  } 
  | { name: 'address1_lt', alias?: string  } 
  | { name: 'address1_lte', alias?: string  } 
  | { name: 'address1_gt', alias?: string  } 
  | { name: 'address1_gte', alias?: string  } 
  | { name: 'address1_contains', alias?: string  } 
  | { name: 'address1_not_contains', alias?: string  } 
  | { name: 'address1_starts_with', alias?: string  } 
  | { name: 'address1_not_starts_with', alias?: string  } 
  | { name: 'address1_ends_with', alias?: string  } 
  | { name: 'address1_not_ends_with', alias?: string  } 
  | { name: 'address2', alias?: string  } 
  | { name: 'address2_not', alias?: string  } 
  | { name: 'address2_in', alias?: string  } 
  | { name: 'address2_not_in', alias?: string  } 
  | { name: 'address2_lt', alias?: string  } 
  | { name: 'address2_lte', alias?: string  } 
  | { name: 'address2_gt', alias?: string  } 
  | { name: 'address2_gte', alias?: string  } 
  | { name: 'address2_contains', alias?: string  } 
  | { name: 'address2_not_contains', alias?: string  } 
  | { name: 'address2_starts_with', alias?: string  } 
  | { name: 'address2_not_starts_with', alias?: string  } 
  | { name: 'address2_ends_with', alias?: string  } 
  | { name: 'address2_not_ends_with', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'city_not', alias?: string  } 
  | { name: 'city_in', alias?: string  } 
  | { name: 'city_not_in', alias?: string  } 
  | { name: 'city_lt', alias?: string  } 
  | { name: 'city_lte', alias?: string  } 
  | { name: 'city_gt', alias?: string  } 
  | { name: 'city_gte', alias?: string  } 
  | { name: 'city_contains', alias?: string  } 
  | { name: 'city_not_contains', alias?: string  } 
  | { name: 'city_starts_with', alias?: string  } 
  | { name: 'city_not_starts_with', alias?: string  } 
  | { name: 'city_ends_with', alias?: string  } 
  | { name: 'city_not_ends_with', alias?: string  } 
  | { name: 'state', alias?: string  } 
  | { name: 'state_not', alias?: string  } 
  | { name: 'state_in', alias?: string  } 
  | { name: 'state_not_in', alias?: string  } 
  | { name: 'state_lt', alias?: string  } 
  | { name: 'state_lte', alias?: string  } 
  | { name: 'state_gt', alias?: string  } 
  | { name: 'state_gte', alias?: string  } 
  | { name: 'state_contains', alias?: string  } 
  | { name: 'state_not_contains', alias?: string  } 
  | { name: 'state_starts_with', alias?: string  } 
  | { name: 'state_not_starts_with', alias?: string  } 
  | { name: 'state_ends_with', alias?: string  } 
  | { name: 'state_not_ends_with', alias?: string  } 
  | { name: 'zip', alias?: string  } 
  | { name: 'zip_not', alias?: string  } 
  | { name: 'zip_in', alias?: string  } 
  | { name: 'zip_not_in', alias?: string  } 
  | { name: 'zip_lt', alias?: string  } 
  | { name: 'zip_lte', alias?: string  } 
  | { name: 'zip_gt', alias?: string  } 
  | { name: 'zip_gte', alias?: string  } 
  | { name: 'zip_contains', alias?: string  } 
  | { name: 'zip_not_contains', alias?: string  } 
  | { name: 'zip_starts_with', alias?: string  } 
  | { name: 'zip_not_starts_with', alias?: string  } 
  | { name: 'zip_ends_with', alias?: string  } 
  | { name: 'zip_not_ends_with', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'country_not', alias?: string  } 
  | { name: 'country_in', alias?: string  } 
  | { name: 'country_not_in', alias?: string  } 
  | { name: 'country_lt', alias?: string  } 
  | { name: 'country_lte', alias?: string  } 
  | { name: 'country_gt', alias?: string  } 
  | { name: 'country_gte', alias?: string  } 
  | { name: 'country_contains', alias?: string  } 
  | { name: 'country_not_contains', alias?: string  } 
  | { name: 'country_starts_with', alias?: string  } 
  | { name: 'country_not_starts_with', alias?: string  } 
  | { name: 'country_ends_with', alias?: string  } 
  | { name: 'country_not_ends_with', alias?: string  } 
  | { name: 'region', alias?: string  } 
  | { name: 'region_not', alias?: string  } 
  | { name: 'region_in', alias?: string  } 
  | { name: 'region_not_in', alias?: string  } 
  | { name: 'region_lt', alias?: string  } 
  | { name: 'region_lte', alias?: string  } 
  | { name: 'region_gt', alias?: string  } 
  | { name: 'region_gte', alias?: string  } 
  | { name: 'region_contains', alias?: string  } 
  | { name: 'region_not_contains', alias?: string  } 
  | { name: 'region_starts_with', alias?: string  } 
  | { name: 'region_not_starts_with', alias?: string  } 
  | { name: 'region_ends_with', alias?: string  } 
  | { name: 'region_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'phone_not', alias?: string  } 
  | { name: 'phone_in', alias?: string  } 
  | { name: 'phone_not_in', alias?: string  } 
  | { name: 'phone_lt', alias?: string  } 
  | { name: 'phone_lte', alias?: string  } 
  | { name: 'phone_gt', alias?: string  } 
  | { name: 'phone_gte', alias?: string  } 
  | { name: 'phone_contains', alias?: string  } 
  | { name: 'phone_not_contains', alias?: string  } 
  | { name: 'phone_starts_with', alias?: string  } 
  | { name: 'phone_not_starts_with', alias?: string  } 
  | { name: 'phone_ends_with', alias?: string  } 
  | { name: 'phone_not_ends_with', alias?: string  } 
  | { name: 'creditcardtype', alias?: string  } 
  | { name: 'creditcardtype_not', alias?: string  } 
  | { name: 'creditcardtype_in', alias?: string  } 
  | { name: 'creditcardtype_not_in', alias?: string  } 
  | { name: 'creditcardtype_lt', alias?: string  } 
  | { name: 'creditcardtype_lte', alias?: string  } 
  | { name: 'creditcardtype_gt', alias?: string  } 
  | { name: 'creditcardtype_gte', alias?: string  } 
  | { name: 'creditcardtype_contains', alias?: string  } 
  | { name: 'creditcardtype_not_contains', alias?: string  } 
  | { name: 'creditcardtype_starts_with', alias?: string  } 
  | { name: 'creditcardtype_not_starts_with', alias?: string  } 
  | { name: 'creditcardtype_ends_with', alias?: string  } 
  | { name: 'creditcardtype_not_ends_with', alias?: string  } 
  | { name: 'creditcard', alias?: string  } 
  | { name: 'creditcard_not', alias?: string  } 
  | { name: 'creditcard_in', alias?: string  } 
  | { name: 'creditcard_not_in', alias?: string  } 
  | { name: 'creditcard_lt', alias?: string  } 
  | { name: 'creditcard_lte', alias?: string  } 
  | { name: 'creditcard_gt', alias?: string  } 
  | { name: 'creditcard_gte', alias?: string  } 
  | { name: 'creditcard_contains', alias?: string  } 
  | { name: 'creditcard_not_contains', alias?: string  } 
  | { name: 'creditcard_starts_with', alias?: string  } 
  | { name: 'creditcard_not_starts_with', alias?: string  } 
  | { name: 'creditcard_ends_with', alias?: string  } 
  | { name: 'creditcard_not_ends_with', alias?: string  } 
  | { name: 'creditcardexpiry', alias?: string  } 
  | { name: 'creditcardexpiry_not', alias?: string  } 
  | { name: 'creditcardexpiry_in', alias?: string  } 
  | { name: 'creditcardexpiry_not_in', alias?: string  } 
  | { name: 'creditcardexpiry_lt', alias?: string  } 
  | { name: 'creditcardexpiry_lte', alias?: string  } 
  | { name: 'creditcardexpiry_gt', alias?: string  } 
  | { name: 'creditcardexpiry_gte', alias?: string  } 
  | { name: 'creditcardexpiry_contains', alias?: string  } 
  | { name: 'creditcardexpiry_not_contains', alias?: string  } 
  | { name: 'creditcardexpiry_starts_with', alias?: string  } 
  | { name: 'creditcardexpiry_not_starts_with', alias?: string  } 
  | { name: 'creditcardexpiry_ends_with', alias?: string  } 
  | { name: 'creditcardexpiry_not_ends_with', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'username_not', alias?: string  } 
  | { name: 'username_in', alias?: string  } 
  | { name: 'username_not_in', alias?: string  } 
  | { name: 'username_lt', alias?: string  } 
  | { name: 'username_lte', alias?: string  } 
  | { name: 'username_gt', alias?: string  } 
  | { name: 'username_gte', alias?: string  } 
  | { name: 'username_contains', alias?: string  } 
  | { name: 'username_not_contains', alias?: string  } 
  | { name: 'username_starts_with', alias?: string  } 
  | { name: 'username_not_starts_with', alias?: string  } 
  | { name: 'username_ends_with', alias?: string  } 
  | { name: 'username_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'age', alias?: string  } 
  | { name: 'age_not', alias?: string  } 
  | { name: 'age_in', alias?: string  } 
  | { name: 'age_not_in', alias?: string  } 
  | { name: 'age_lt', alias?: string  } 
  | { name: 'age_lte', alias?: string  } 
  | { name: 'age_gt', alias?: string  } 
  | { name: 'age_gte', alias?: string  } 
  | { name: 'income', alias?: string  } 
  | { name: 'income_not', alias?: string  } 
  | { name: 'income_in', alias?: string  } 
  | { name: 'income_not_in', alias?: string  } 
  | { name: 'income_lt', alias?: string  } 
  | { name: 'income_lte', alias?: string  } 
  | { name: 'income_gt', alias?: string  } 
  | { name: 'income_gte', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  | { name: 'gender_not', alias?: string  } 
  | { name: 'gender_in', alias?: string  } 
  | { name: 'gender_not_in', alias?: string  } 
  | { name: 'gender_lt', alias?: string  } 
  | { name: 'gender_lte', alias?: string  } 
  | { name: 'gender_gt', alias?: string  } 
  | { name: 'gender_gte', alias?: string  } 
  | { name: 'gender_contains', alias?: string  } 
  | { name: 'gender_not_contains', alias?: string  } 
  | { name: 'gender_starts_with', alias?: string  } 
  | { name: 'gender_not_starts_with', alias?: string  } 
  | { name: 'gender_ends_with', alias?: string  } 
  | { name: 'gender_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderlinesWhereUniqueInput {
  orderline_id?: string | null
}
export type OrderlinesWhereUniqueInputInputObject =
  | Extract<keyof OrderlinesWhereUniqueInput, string>
  | { name: 'orderline_id', alias?: string  } 
  
export interface OrderlinesWhereInput {
  orderline_id?: string | null
  orderline_id_not?: string | null
  orderline_id_in?: string[]
  orderline_id_not_in?: string[]
  orderline_id_lt?: string | null
  orderline_id_lte?: string | null
  orderline_id_gt?: string | null
  orderline_id_gte?: string | null
  orderline_id_contains?: string | null
  orderline_id_not_contains?: string | null
  orderline_id_starts_with?: string | null
  orderline_id_not_starts_with?: string | null
  orderline_id_ends_with?: string | null
  orderline_id_not_ends_with?: string | null
  order_id?: OrdersWhereInput | null
  product_id?: ProductsWhereInput | null
  quantity?: number | null
  quantity_not?: number | null
  quantity_in?: number[]
  quantity_not_in?: number[]
  quantity_lt?: number | null
  quantity_lte?: number | null
  quantity_gt?: number | null
  quantity_gte?: number | null
  orderdate?: string | null
  orderdate_not?: string | null
  orderdate_in?: string[]
  orderdate_not_in?: string[]
  orderdate_lt?: string | null
  orderdate_lte?: string | null
  orderdate_gt?: string | null
  orderdate_gte?: string | null
  AND?: OrderlinesWhereInput[]
  OR?: OrderlinesWhereInput[]
  NOT?: OrderlinesWhereInput[]
}
export type OrderlinesWhereInputInputObject =
  | Extract<keyof OrderlinesWhereInput, string>
  | { name: 'orderline_id', alias?: string  } 
  | { name: 'orderline_id_not', alias?: string  } 
  | { name: 'orderline_id_in', alias?: string  } 
  | { name: 'orderline_id_not_in', alias?: string  } 
  | { name: 'orderline_id_lt', alias?: string  } 
  | { name: 'orderline_id_lte', alias?: string  } 
  | { name: 'orderline_id_gt', alias?: string  } 
  | { name: 'orderline_id_gte', alias?: string  } 
  | { name: 'orderline_id_contains', alias?: string  } 
  | { name: 'orderline_id_not_contains', alias?: string  } 
  | { name: 'orderline_id_starts_with', alias?: string  } 
  | { name: 'orderline_id_not_starts_with', alias?: string  } 
  | { name: 'orderline_id_ends_with', alias?: string  } 
  | { name: 'orderline_id_not_ends_with', alias?: string  } 
  | { name: 'order_id', alias?: string  } 
  | { name: 'product_id', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'quantity_not', alias?: string  } 
  | { name: 'quantity_in', alias?: string  } 
  | { name: 'quantity_not_in', alias?: string  } 
  | { name: 'quantity_lt', alias?: string  } 
  | { name: 'quantity_lte', alias?: string  } 
  | { name: 'quantity_gt', alias?: string  } 
  | { name: 'quantity_gte', alias?: string  } 
  | { name: 'orderdate', alias?: string  } 
  | { name: 'orderdate_not', alias?: string  } 
  | { name: 'orderdate_in', alias?: string  } 
  | { name: 'orderdate_not_in', alias?: string  } 
  | { name: 'orderdate_lt', alias?: string  } 
  | { name: 'orderdate_lte', alias?: string  } 
  | { name: 'orderdate_gt', alias?: string  } 
  | { name: 'orderdate_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CustomersWhereUniqueInput {
  cust_id?: string | null
}
export type CustomersWhereUniqueInputInputObject =
  | Extract<keyof CustomersWhereUniqueInput, string>
  | { name: 'cust_id', alias?: string  } 
  
export interface ProductsCreateInput {
  prod_id?: string
  cat_id?: number | null
  title?: string
  actor?: string
  price?: number
  special?: number | null
}
export type ProductsCreateInputInputObject =
  | Extract<keyof ProductsCreateInput, string>
  | { name: 'prod_id', alias?: string  } 
  | { name: 'cat_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'actor', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'special', alias?: string  } 
  
export interface ProductsUpdateInput {
  prod_id?: string | null
  cat_id?: number | null
  title?: string | null
  actor?: string | null
  price?: number | null
  special?: number | null
}
export type ProductsUpdateInputInputObject =
  | Extract<keyof ProductsUpdateInput, string>
  | { name: 'prod_id', alias?: string  } 
  | { name: 'cat_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'actor', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'special', alias?: string  } 
  
export interface ProductsUpdateManyMutationInput {
  prod_id?: string | null
  cat_id?: number | null
  title?: string | null
  actor?: string | null
  price?: number | null
  special?: number | null
}
export type ProductsUpdateManyMutationInputInputObject =
  | Extract<keyof ProductsUpdateManyMutationInput, string>
  | { name: 'prod_id', alias?: string  } 
  | { name: 'cat_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'actor', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'special', alias?: string  } 
  
export interface OrdersCreateInput {
  order_id?: string
  orderdate?: string | null
  customer_id?: CustomersCreateOneInput | null
  netamount?: number
  tax?: number
  totalAmount?: number
}
export type OrdersCreateInputInputObject =
  | Extract<keyof OrdersCreateInput, string>
  | { name: 'order_id', alias?: string  } 
  | { name: 'orderdate', alias?: string  } 
  | { name: 'customer_id', alias?: string  } 
  | { name: 'netamount', alias?: string  } 
  | { name: 'tax', alias?: string  } 
  | { name: 'totalAmount', alias?: string  } 
  
export interface CustomersCreateOneInput {
  create?: CustomersCreateInput | null
  connect?: CustomersWhereUniqueInput | null
}
export type CustomersCreateOneInputInputObject =
  | Extract<keyof CustomersCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CustomersCreateInput {
  cust_id?: string
  firstname?: string
  lastname?: string
  address1?: string
  address2?: string | null
  city?: string
  state?: string | null
  zip?: string | null
  country?: string
  region?: string
  email?: string | null
  phone?: string | null
  creditcardtype?: string
  creditcard?: string
  creditcardexpiry?: string
  username?: string
  password?: string
  age?: number | null
  income?: number | null
  gender?: string | null
}
export type CustomersCreateInputInputObject =
  | Extract<keyof CustomersCreateInput, string>
  | { name: 'cust_id', alias?: string  } 
  | { name: 'firstname', alias?: string  } 
  | { name: 'lastname', alias?: string  } 
  | { name: 'address1', alias?: string  } 
  | { name: 'address2', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'state', alias?: string  } 
  | { name: 'zip', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'region', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'creditcardtype', alias?: string  } 
  | { name: 'creditcard', alias?: string  } 
  | { name: 'creditcardexpiry', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'age', alias?: string  } 
  | { name: 'income', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  
export interface OrdersUpdateInput {
  order_id?: string | null
  orderdate?: string | null
  customer_id?: CustomersUpdateOneInput | null
  netamount?: number | null
  tax?: number | null
  totalAmount?: number | null
}
export type OrdersUpdateInputInputObject =
  | Extract<keyof OrdersUpdateInput, string>
  | { name: 'order_id', alias?: string  } 
  | { name: 'orderdate', alias?: string  } 
  | { name: 'customer_id', alias?: string  } 
  | { name: 'netamount', alias?: string  } 
  | { name: 'tax', alias?: string  } 
  | { name: 'totalAmount', alias?: string  } 
  
export interface CustomersUpdateOneInput {
  create?: CustomersCreateInput | null
  update?: CustomersUpdateDataInput | null
  upsert?: CustomersUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: CustomersWhereUniqueInput | null
}
export type CustomersUpdateOneInputInputObject =
  | Extract<keyof CustomersUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CustomersUpdateDataInput {
  cust_id?: string | null
  firstname?: string | null
  lastname?: string | null
  address1?: string | null
  address2?: string | null
  city?: string | null
  state?: string | null
  zip?: string | null
  country?: string | null
  region?: string | null
  email?: string | null
  phone?: string | null
  creditcardtype?: string | null
  creditcard?: string | null
  creditcardexpiry?: string | null
  username?: string | null
  password?: string | null
  age?: number | null
  income?: number | null
  gender?: string | null
}
export type CustomersUpdateDataInputInputObject =
  | Extract<keyof CustomersUpdateDataInput, string>
  | { name: 'cust_id', alias?: string  } 
  | { name: 'firstname', alias?: string  } 
  | { name: 'lastname', alias?: string  } 
  | { name: 'address1', alias?: string  } 
  | { name: 'address2', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'state', alias?: string  } 
  | { name: 'zip', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'region', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'creditcardtype', alias?: string  } 
  | { name: 'creditcard', alias?: string  } 
  | { name: 'creditcardexpiry', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'age', alias?: string  } 
  | { name: 'income', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  
export interface CustomersUpsertNestedInput {
  update?: CustomersUpdateDataInput
  create?: CustomersCreateInput
}
export type CustomersUpsertNestedInputInputObject =
  | Extract<keyof CustomersUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrdersUpdateManyMutationInput {
  order_id?: string | null
  orderdate?: string | null
  netamount?: number | null
  tax?: number | null
  totalAmount?: number | null
}
export type OrdersUpdateManyMutationInputInputObject =
  | Extract<keyof OrdersUpdateManyMutationInput, string>
  | { name: 'order_id', alias?: string  } 
  | { name: 'orderdate', alias?: string  } 
  | { name: 'netamount', alias?: string  } 
  | { name: 'tax', alias?: string  } 
  | { name: 'totalAmount', alias?: string  } 
  
export interface OrderlinesCreateInput {
  orderline_id?: string
  order_id?: OrdersCreateOneInput
  product_id?: ProductsCreateOneInput
  quantity?: number
  orderdate?: string
}
export type OrderlinesCreateInputInputObject =
  | Extract<keyof OrderlinesCreateInput, string>
  | { name: 'orderline_id', alias?: string  } 
  | { name: 'order_id', alias?: string  } 
  | { name: 'product_id', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'orderdate', alias?: string  } 
  
export interface OrdersCreateOneInput {
  create?: OrdersCreateInput | null
  connect?: OrdersWhereUniqueInput | null
}
export type OrdersCreateOneInputInputObject =
  | Extract<keyof OrdersCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProductsCreateOneInput {
  create?: ProductsCreateInput | null
  connect?: ProductsWhereUniqueInput | null
}
export type ProductsCreateOneInputInputObject =
  | Extract<keyof ProductsCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderlinesUpdateInput {
  orderline_id?: string | null
  order_id?: OrdersUpdateOneRequiredInput | null
  product_id?: ProductsUpdateOneRequiredInput | null
  quantity?: number | null
  orderdate?: string | null
}
export type OrderlinesUpdateInputInputObject =
  | Extract<keyof OrderlinesUpdateInput, string>
  | { name: 'orderline_id', alias?: string  } 
  | { name: 'order_id', alias?: string  } 
  | { name: 'product_id', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'orderdate', alias?: string  } 
  
export interface OrdersUpdateOneRequiredInput {
  create?: OrdersCreateInput | null
  update?: OrdersUpdateDataInput | null
  upsert?: OrdersUpsertNestedInput | null
  connect?: OrdersWhereUniqueInput | null
}
export type OrdersUpdateOneRequiredInputInputObject =
  | Extract<keyof OrdersUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrdersUpdateDataInput {
  order_id?: string | null
  orderdate?: string | null
  customer_id?: CustomersUpdateOneInput | null
  netamount?: number | null
  tax?: number | null
  totalAmount?: number | null
}
export type OrdersUpdateDataInputInputObject =
  | Extract<keyof OrdersUpdateDataInput, string>
  | { name: 'order_id', alias?: string  } 
  | { name: 'orderdate', alias?: string  } 
  | { name: 'customer_id', alias?: string  } 
  | { name: 'netamount', alias?: string  } 
  | { name: 'tax', alias?: string  } 
  | { name: 'totalAmount', alias?: string  } 
  
export interface OrdersUpsertNestedInput {
  update?: OrdersUpdateDataInput
  create?: OrdersCreateInput
}
export type OrdersUpsertNestedInputInputObject =
  | Extract<keyof OrdersUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ProductsUpdateOneRequiredInput {
  create?: ProductsCreateInput | null
  update?: ProductsUpdateDataInput | null
  upsert?: ProductsUpsertNestedInput | null
  connect?: ProductsWhereUniqueInput | null
}
export type ProductsUpdateOneRequiredInputInputObject =
  | Extract<keyof ProductsUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ProductsUpdateDataInput {
  prod_id?: string | null
  cat_id?: number | null
  title?: string | null
  actor?: string | null
  price?: number | null
  special?: number | null
}
export type ProductsUpdateDataInputInputObject =
  | Extract<keyof ProductsUpdateDataInput, string>
  | { name: 'prod_id', alias?: string  } 
  | { name: 'cat_id', alias?: string  } 
  | { name: 'title', alias?: string  } 
  | { name: 'actor', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'special', alias?: string  } 
  
export interface ProductsUpsertNestedInput {
  update?: ProductsUpdateDataInput
  create?: ProductsCreateInput
}
export type ProductsUpsertNestedInputInputObject =
  | Extract<keyof ProductsUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderlinesUpdateManyMutationInput {
  orderline_id?: string | null
  quantity?: number | null
  orderdate?: string | null
}
export type OrderlinesUpdateManyMutationInputInputObject =
  | Extract<keyof OrderlinesUpdateManyMutationInput, string>
  | { name: 'orderline_id', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'orderdate', alias?: string  } 
  
export interface CustomersUpdateInput {
  cust_id?: string | null
  firstname?: string | null
  lastname?: string | null
  address1?: string | null
  address2?: string | null
  city?: string | null
  state?: string | null
  zip?: string | null
  country?: string | null
  region?: string | null
  email?: string | null
  phone?: string | null
  creditcardtype?: string | null
  creditcard?: string | null
  creditcardexpiry?: string | null
  username?: string | null
  password?: string | null
  age?: number | null
  income?: number | null
  gender?: string | null
}
export type CustomersUpdateInputInputObject =
  | Extract<keyof CustomersUpdateInput, string>
  | { name: 'cust_id', alias?: string  } 
  | { name: 'firstname', alias?: string  } 
  | { name: 'lastname', alias?: string  } 
  | { name: 'address1', alias?: string  } 
  | { name: 'address2', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'state', alias?: string  } 
  | { name: 'zip', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'region', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'creditcardtype', alias?: string  } 
  | { name: 'creditcard', alias?: string  } 
  | { name: 'creditcardexpiry', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'age', alias?: string  } 
  | { name: 'income', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  
export interface CustomersUpdateManyMutationInput {
  cust_id?: string | null
  firstname?: string | null
  lastname?: string | null
  address1?: string | null
  address2?: string | null
  city?: string | null
  state?: string | null
  zip?: string | null
  country?: string | null
  region?: string | null
  email?: string | null
  phone?: string | null
  creditcardtype?: string | null
  creditcard?: string | null
  creditcardexpiry?: string | null
  username?: string | null
  password?: string | null
  age?: number | null
  income?: number | null
  gender?: string | null
}
export type CustomersUpdateManyMutationInputInputObject =
  | Extract<keyof CustomersUpdateManyMutationInput, string>
  | { name: 'cust_id', alias?: string  } 
  | { name: 'firstname', alias?: string  } 
  | { name: 'lastname', alias?: string  } 
  | { name: 'address1', alias?: string  } 
  | { name: 'address2', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'state', alias?: string  } 
  | { name: 'zip', alias?: string  } 
  | { name: 'country', alias?: string  } 
  | { name: 'region', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'phone', alias?: string  } 
  | { name: 'creditcardtype', alias?: string  } 
  | { name: 'creditcard', alias?: string  } 
  | { name: 'creditcardexpiry', alias?: string  } 
  | { name: 'username', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'age', alias?: string  } 
  | { name: 'income', alias?: string  } 
  | { name: 'gender', alias?: string  } 
  
export interface ProductsSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ProductsWhereInput | null
  AND?: ProductsSubscriptionWhereInput[]
  OR?: ProductsSubscriptionWhereInput[]
  NOT?: ProductsSubscriptionWhereInput[]
}
export type ProductsSubscriptionWhereInputInputObject =
  | Extract<keyof ProductsSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrdersSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OrdersWhereInput | null
  AND?: OrdersSubscriptionWhereInput[]
  OR?: OrdersSubscriptionWhereInput[]
  NOT?: OrdersSubscriptionWhereInput[]
}
export type OrdersSubscriptionWhereInputInputObject =
  | Extract<keyof OrdersSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderlinesSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OrderlinesWhereInput | null
  AND?: OrderlinesSubscriptionWhereInput[]
  OR?: OrderlinesSubscriptionWhereInput[]
  NOT?: OrderlinesSubscriptionWhereInput[]
}
export type OrderlinesSubscriptionWhereInputInputObject =
  | Extract<keyof OrderlinesSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CustomersSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: CustomersWhereInput | null
  AND?: CustomersSubscriptionWhereInput[]
  OR?: CustomersSubscriptionWhereInput[]
  NOT?: CustomersSubscriptionWhereInput[]
}
export type CustomersSubscriptionWhereInputInputObject =
  | Extract<keyof CustomersSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type ProductsOrderByInputValues =
  | 'prod_id_ASC'
  | 'prod_id_DESC'
  | 'cat_id_ASC'
  | 'cat_id_DESC'
  | 'title_ASC'
  | 'title_DESC'
  | 'actor_ASC'
  | 'actor_DESC'
  | 'price_ASC'
  | 'price_DESC'
  | 'special_ASC'
  | 'special_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OrdersOrderByInputValues =
  | 'order_id_ASC'
  | 'order_id_DESC'
  | 'orderdate_ASC'
  | 'orderdate_DESC'
  | 'netamount_ASC'
  | 'netamount_DESC'
  | 'tax_ASC'
  | 'tax_DESC'
  | 'totalAmount_ASC'
  | 'totalAmount_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OrderlinesOrderByInputValues =
  | 'orderline_id_ASC'
  | 'orderline_id_DESC'
  | 'quantity_ASC'
  | 'quantity_DESC'
  | 'orderdate_ASC'
  | 'orderdate_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type CustomersOrderByInputValues =
  | 'cust_id_ASC'
  | 'cust_id_DESC'
  | 'firstname_ASC'
  | 'firstname_DESC'
  | 'lastname_ASC'
  | 'lastname_DESC'
  | 'address1_ASC'
  | 'address1_DESC'
  | 'address2_ASC'
  | 'address2_DESC'
  | 'city_ASC'
  | 'city_DESC'
  | 'state_ASC'
  | 'state_DESC'
  | 'zip_ASC'
  | 'zip_DESC'
  | 'country_ASC'
  | 'country_DESC'
  | 'region_ASC'
  | 'region_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'phone_ASC'
  | 'phone_DESC'
  | 'creditcardtype_ASC'
  | 'creditcardtype_DESC'
  | 'creditcard_ASC'
  | 'creditcard_DESC'
  | 'creditcardexpiry_ASC'
  | 'creditcardexpiry_DESC'
  | 'username_ASC'
  | 'username_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'age_ASC'
  | 'age_DESC'
  | 'income_ASC'
  | 'income_DESC'
  | 'gender_ASC'
  | 'gender_DESC'
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  