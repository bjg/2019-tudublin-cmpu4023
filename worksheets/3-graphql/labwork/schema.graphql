scalar DateTime

type Query{
   getCategoriesEndpoint: [Category!]!
   getCategoriesWhereEndpoint(catId: ID!): [Category!]!
   getCustomersEndpoint: [Customer!]!
   getProductsEndpoint: [Products!]!
   getOrdersEndpoint: [Orders!]!
   getCust_HistsEndpoint: [Cust_Hist!]!
   getInventoryEndpoint:[Inventory!]!
   getOrderlinesEndpoint:[Orderlines!]!
   getProductsByCategoryEndpoint(categoryId: ID!): Products!

}

type Mutation{
  createCategoryEndpoint(
    categoryname: String!
  ): Category

  createCustomerEndpoint(
    firstname: String!,
    lastname: String!,
    address1: String!,
    address2: String!,
    city: String!,
    state: String!,
    zip: String!,
    county: String!,
    region: String!,
    email: String!,
    phone: String! ,
    creditcardtype: String,
    creditcard: String,
    creditcardexpiration: DateTime,
    username: String!,
    password: String!,
    age: Int,
    income: Float,
    gender: String!
  ): Customer

  createProductsEndpoint(title: String!,actor: String,price: Float!,special: Float,common_prod_id: Int,categoryId: ID): Products

  createOrdersEndpoint(
    orderdate: DateTime,
    netamount: Float!,
    tax: Float!,
    totalamount: Float!,
    customerId: ID!
  ): Orders

  createCust_HistEndpoint(
  customerId: ID!,
  orderId: ID!,
  productId: ID!
  ): Cust_Hist


createInventoryEndpoint(quantity_in_stock: Int!,sales: Int!, productId: ID!, testupdate: String): Inventory
createOrderlinesEndpoint(productId:ID!,orderId:ID!,quantity:Int,orderdate:DateTime,inventoryId:String):Orderlines

}

type Category{
  id: ID!
  categoryname: String!
}

type Customer{
  id: ID!
  firstname: String!
  lastname: String!
  address1: String!
  address2: String!
  city: String!
  state: String!
  zip: String!
  county: String!
  region: String!
  email: String!
  phone: String! 
  creditcardtype: String
  creditcard: String
  creditcardexpiration: DateTime
  username: String!
  password: String!
  age: Int
  income: Float
  gender: String!
}

type Products{
  id: ID!
  title: String!
  actor: String
  price: Float!
  special: Float
  common_prod_id: Int
  category: Category
 
}

type Orders{
  id: ID!
  orderdate: DateTime
  netamount: Float!
  tax: Float!
  totalamount: Float!
  customer: Customer
}

type Cust_Hist{
  id: ID!
  customer: Customer
  order: Orders
  product: Products
}

type Inventory{
  id: ID!
  quantity_in_stock: Int
  sales: Int
  product: Products
  testupdate: String
}

type Orderlines{
  id: ID!
  product: Products
  order: Orders
  quantity: Int
  orderdate: DateTime
  inventoryId: String
}





