###
# Name: Gabriel Grimberg
# Module: Enterprise Application Development
# Lab: 3
# Questions: All
# Type: Datamodel Prisma (Database Schema)
###

# Question (1) - Needed for All Questions
# Using using graphql-yoga and the ERD below
# construct a graphql schema using any four relationsâ€‹ of your choice 
# having the relationships depicted.

# Customers Table
type Customers {
  id: ID! @unique
  firstname: String!
  lastname: String!
  address1: String!
  address2: String
  city: String!
  state: String!
  zip: String
  country: String!
  region: String
  email: String! @unique
  phone: String
  creditcardtype: String
  creditcard: String
  creditcardexpiration: String
  username: String! @unique
  password: String!
  age: Int!
  income: Float
  gender: String!
}

# Orders Table
type Orders {
  id: ID! @unique
  orderdate: DateTime!
  netamount: Float!
  tax: Float!
  totalamount: Float!
  customers: Customers
}

# Categories Table
type Categories {
  id: ID! @unique
  categoryname: String!
}

# Products Table
type Products {
  id: ID! @unique
  title: String
  actor: String
  price: Float
  special: Boolean
  common_prod_id: Int
  categories: Categories
  inventory: Inventory
}

# Re-order Table
type Reorder {
  id: ID! @unique
  date_low: DateTime!
  quan_low: Int
  date_reordered: DateTime!
  quan_reordered: Int
  date_expected: String
  products: Products
}

# Inventory Table
type Inventory {
  id: ID! @unique
  quan_in_stock: Int
  sales: Int
  products: Products
}

# Order Lines Table
type Orderlines {
  id: ID! @unique
  quantity: Int
  orderdate: DateTime!
  orders: Orders
  products: Products
}

# Customer History Table
type Cust_hist {
  id: ID! @unique
  customers: Customers
  orders: Orders
  products: Products
}