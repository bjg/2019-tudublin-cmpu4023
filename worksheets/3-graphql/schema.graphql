type Query{
	products: [Product!]!
	categories: [Category!]!
	orderlines:[Orderline!]!
	orders: [Order!]!
}

type Mutation{
	createOrder(orderlines:[ID!]!): Order
	createOrderline(prod:ID!, quantity: Int!): Orderline
	createProduct(title: String!, price: Float!, category:ID!): Product
	createCategory(categoryname:String!): Category
}

scalar DateTime

type Category{
  id:ID!
  categoryname: String!
}

type Product {
  id:ID!
  category: Category!
  title: String!
  actor: String
  price: Float!
  special: Boolean
}

type Inventory {
  id:ID!
  product: Product!
  quan_in_stock: Int!
  sales: Int!
}

type Orderline {
  id:ID!
  product: Product!
  quantity: Int!
}

type Order {
  id:ID!
  quantity: Int
  net_amount: Float
  tax: Float
  total_amount:Float
  orderdate: DateTime
  orderlines: [Orderline!]!
}
