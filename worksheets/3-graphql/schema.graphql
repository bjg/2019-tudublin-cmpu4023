scalar DateTime

type Query {
  products: [Product!]!
  productById(id: ID!): Product
  productsByCategory(id: ID!): [Product!]!
  inventoryForProducts(id: ID!): [Inventory!]!
  categories: [Category!]!
  inventories: [Inventory!]!
}

type Mutation {
  createCategory(categoryname: String!): Category
  createProduct(title: String!, category: ID!, actor: String!, 
    price: Float!, special: Int!, common_prod_id: Int!): Product
  createInventory(quan_in_stock: Int!, sales: Int!, product: ID!) : Inventory
  updateInventoryQuantity(id: ID!, quan_in_stock: Int!): Inventory
  createReorder(date_low: DateTime!, quan_low: Int!, date_reordered: DateTime!
    ,quan_reordered: Int!, date_expected: DateTime! prod_id: ID!) : Reorder
}

type Category {
  id: ID!
  categoryname: String
}

type Product {
  id: ID!
  category: Category!
  title: String!
  actor: String!
  price: Float!
  special: Int!
  common_prod_id: Int!
}

type Inventory {
  id: ID!
  product: Product!
  quan_in_stock: Int!
  sales: Int!
}

type Reorder {
  id: ID!
  prod_id: Product!
  date_low: DateTime!
  quan_low: Int!
  date_reordered: DateTime!
  quan_reordered: Int!
  date_expected: DateTime!
}