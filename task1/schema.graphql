scalar DateTime

type Query {
  getCustomer: [Customer!]!
  getOrders: [Orders!]!
  getCategories: [Category!]!
  getProducts: [Products!]!
  
  getCustomerById(id: ID!): Customer!
}

type Mutation {

  createCustomer(
	firstname: String!
	lastname: String!
	address1: String!
	address2: String!
	city: String!
	state: String!
	zip: String!
	country: String!
	region: String!
	email: String!
	phone: Int
	creditcardtype: String!
	creditcard: String!
	creditcardexpiration: String!
	username: String!
	password: String!
	age: Int!
	income: Float!
	gender: String!
  ): Customer
  
  createOrders(
	orderdate: DateTime
	customerid: ID!
	netamount: Float!
	tax: Float!
	totalamount: Float!
  ): Orders
  
  createCategories(
	categoryname: String!
  ): Category
  
  createProducts(
	category: ID!
	title: String!
	actor: String!
	price: Float!
	special: Float!
	common_prod_id: Int
  ): Products
}

type Customer {
	id: ID! 
	firstname: String!
	lastname: String!
	address1: String!
	address2: String!
	city: String!
	state: String!
	zip: String!
	country: String!
	region: String!
	email: String!
	phone: Int
	creditcardtype: String!
	creditcard: String!
	creditcardexpiration: String!
	username: String!
	password: String!
	age: Int!
	income: Float!
	gender: String!
}

type Orders {
	id: ID! 
	orderdate: DateTime
	customerid: Customer
	netamount: Float!
	tax: Float!
	totalamount: Float!
}

type Products {
	id: ID! 
	category: Category
	title: String!
	actor: String!
	price: Float!
	special: Float!
	common_prod_id: Int
}

type Category {
	id: ID! 
	categoryname: String!
}